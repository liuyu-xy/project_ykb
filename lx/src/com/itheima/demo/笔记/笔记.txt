Static特点：1： static的内容 该类所有的对象共享同一个
           2： static的内容 可以使用对象调用 也可以使用类名调用，最好类名调用。
 继承：class 父类 {
    }
    class 子类 extends 父类 {//class a extends b----子类a继承父类b
    }
 extends使用它可以让子类继承父类，在java中，让一个类继承另外一个类都可以使用extends去继承
java中只支持单继承，不支持多继承，支持多层继承，可以继承成员变量、成员方法、构造方法
final:修饰的类  不能被继承。
final ：修饰方法 之后 所被修饰的这个方法就不能被重写了。  地址值不变
final ：修饰变量  所被修饰的这个变量就变成了常量(不能再次被赋值)
常量：
    字面值常量
        1：不变
        2：可以直接写出
多态：
1. 继承或者实现关系
2. 父类的变量 接收 子类的对象。
3. 还要有方法的重写，（非必须）因为开发中 使用多态 都是用 方法的重写。
事物以多种形态 表现出来
        Cat c = new Cat(); 非多态
        Animal a = new Cat();多态，父类的引用 表示子类的对象
              方法必须在 Animal中存在！！！不存在的话调用的时候就报错了！！
面向对象的设计原则：单一职责 、里氏替换、依赖倒置、开闭原则、接口隔离
多态：多态中用的时候 都是用的父类形态的内容只有重写的方法 才是调用的子类的。
抽象类:有抽象方法的类
 特点: 子类继承 抽象 必须要全部重写 抽象方法
        不能创建对象
接口特点:
    1. 无法创建对象
    2. 接口里没有变量都是常量
    3. 接口里方法都是抽象的
    4. 类实现接口可以多实现
 #接口中没有任何有方法体的方法,只能有抽象方法__不写 public abstract ，前面也都会有默认的这两个关键字
 #创建对象报错 cat c=new cat ---报错
 #子类实现接口，需要把接口中的所有抽象方法全部进行重写
 #接口的类继承类只能单继承不能多层继承
 #接口中属性 没有变量,只有常量  而且前面都有默认修饰符 public static final
内部类:方法里面的类
 类的内部的划分
1. 成员--方法外面 类内   -- 成员内部类
  2.局部--方法内部        -- 局部内部类
成员内部类创建:
nbltest o = new nbltest();
nbltest.nbl in = o.new nbltest();

